{
    "fileList": {
        "3D打印笔记": {
            "key": "3D打印笔记",
            "relative_path": "3D打印",
            "file_name": "3D打印笔记.md",
            "title": "3D打印笔记",
            "abstract": "loading…",
            "creation_time": "Thu Jul  4 16:26:33 2024",
            "modification_time": "Thu Jul  4 16:27:05 2024",
            "taglist": [],
            "grouplist": [],
            "img": null
        },
        "excel": {
            "key": "excel",
            "relative_path": "excel",
            "file_name": "excel.md",
            "title": "excel 教程及技巧",
            "abstract": "插入正太分布的随机值 `mean`: 均值 * `standard_dav`: 方差",
            "creation_time": "Thu Jul  4 16:27:11 2024",
            "modification_time": "Thu Jun  6 16:38:18 2024",
            "taglist": [
                "excel",
                "办公"
            ],
            "grouplist": [
                "工具"
            ],
            "img": "https://raw.githubusercontent.com/Txhey/blog/main/main/excel/img/cover-excel.png"
        },
        "git": {
            "key": "git",
            "relative_path": "git",
            "file_name": "git.md",
            "title": "Git",
            "abstract": "查看git版本 文件状态 config 查看全局配置 修改用户名和密码 修改代理 创建仓库 初始化一个新的仓库 从远端服务器克隆一个过来 工作区域 工作区：working Directory 暂存区：Staging Area/Index 本地仓库： Local Repository 状态： Untrack 未跟踪：还没被git管理的文件 Unmodified 未修改 Modified 已修改 St",
            "creation_time": "Thu Jul  4 16:33:00 2024",
            "modification_time": "Tue Jun  4 13:43:34 2024",
            "taglist": [
                "git"
            ],
            "grouplist": [
                "tool"
            ],
            "img": "https://raw.githubusercontent.com/Txhey/blog/main/main/git/img/cover-git.png"
        },
        "test": {
            "key": "test",
            "relative_path": "test",
            "file_name": "test.md",
            "title": "Computed and Watch",
            "abstract": ">This section uses single-file component syntax for code examples Computed values [json](./info.json) [../folderName/subFolder/subFolder2/file.md](../folderName/subFolder/subFolder2/file.md) [../folde",
            "creation_time": "Thu Jul  4 21:19:55 2024",
            "modification_time": "Thu Jul  4 21:19:55 2024",
            "taglist": [],
            "grouplist": [],
            "img": "https://raw.githubusercontent.com/Txhey/blog/main/main/test/img/cover-test.png"
        },
        "idea-AI机械臂": {
            "key": "idea-AI机械臂",
            "relative_path": "idea_box",
            "file_name": "idea-AI机械臂.md",
            "title": "idea： AI机械臂助手",
            "abstract": "AI自主学习的机械臂",
            "creation_time": "Thu Jul  4 16:29:19 2024",
            "modification_time": "Thu Jul  4 16:30:09 2024",
            "taglist": [],
            "grouplist": [],
            "img": "https://raw.githubusercontent.com/Txhey/blog/main/main/idea_box/img/cover-idea-AI机械臂.jpg"
        },
        "js": {
            "key": "js",
            "relative_path": "js",
            "file_name": "js.md",
            "title": "title not found",
            "abstract": "",
            "creation_time": "Thu Jul  4 16:33:44 2024",
            "modification_time": "Wed Jun 12 22:08:43 2024",
            "taglist": [
                "js",
                "web",
                "前端"
            ],
            "grouplist": [
                "前端"
            ],
            "img": "https://raw.githubusercontent.com/Txhey/blog/main/main/js/img/cover-js.png"
        },
        "kaggle": {
            "key": "kaggle",
            "relative_path": "kaggle",
            "file_name": "kaggle.md",
            "title": "kaggle 教程",
            "abstract": "",
            "creation_time": "Thu Jul  4 16:33:55 2024",
            "modification_time": "Sat Jun  8 13:13:16 2024",
            "taglist": [],
            "grouplist": [],
            "img": "https://raw.githubusercontent.com/Txhey/blog/main/main/kaggle/img/cover-kaggle.png"
        },
        "markdown": {
            "key": "markdown",
            "relative_path": "markdown",
            "file_name": "markdown.md",
            "title": "markdown 笔记",
            "abstract": "https://www.cnblogs.com/beyondChan/p/11394854.html 公式 段前和断后使用 \\$\\$ 公式内容 \\$\\$ 矩阵写法 matrix pmatrix 圆括号矩阵 (parenthesis) bmatrix 方括号矩阵 (bracket) vmatrix 竖线矩阵 (vertical line) Vmatrix 双竖线矩阵 普通矩阵`matrix`$$ \\",
            "creation_time": "Thu Jul  4 16:34:30 2024",
            "modification_time": "Sun Jun 23 19:39:25 2024",
            "taglist": [],
            "grouplist": [],
            "img": null
        },
        "numpy": {
            "key": "numpy",
            "relative_path": "python\\numpy",
            "file_name": "numpy.md",
            "title": "numpy教程",
            "abstract": "初始化",
            "creation_time": "Thu Jul  4 16:34:48 2024",
            "modification_time": "Wed Jun  5 14:59:12 2024",
            "taglist": [],
            "grouplist": [],
            "img": "https://raw.githubusercontent.com/Txhey/blog/main/main/python\\numpy/img/cover-numpy.png"
        },
        "plt": {
            "key": "plt",
            "relative_path": "python\\plt",
            "file_name": "plt.md",
            "title": "创建一个4行1列个子图的图表",
            "abstract": "图标尺寸为18宽15高每个子图的高度比例，前3个高度相同，第四个高度是前3个的1.75倍axs= plt.subplots(4,1, figsize=(18,15), gridspec_kw={'height_ratios': [1, 1, 1, 1.75]}) 第一个子图设置标题axs[0].set_title(\"Waveform\") 设置y轴标签axs[0].set_ylabel('Ampli",
            "creation_time": "Thu Jul  4 16:35:21 2024",
            "modification_time": "Fri Jun 21 22:03:35 2024",
            "taglist": [],
            "grouplist": [],
            "img": null
        },
        "pytorch": {
            "key": "pytorch",
            "relative_path": "python\\pytorch",
            "file_name": "pytorch.md",
            "title": "pytorch教程",
            "abstract": "nn 数据结构 nn.Parameter 用于定义模型中需要学习的参数 为什么使用`nn.Parameter` -显式声明参数：通过 `nn.Parameter` 可以显式地声明模型的参数，这对于理解模型结构和调试非常有帮助。-自动优化：将张量包装为 `nn.Parameter` 后，优化器会自动识别这些参数并在训练过程中更新它们的值。 nn.ModuleList pytorch中的一个容器，类似",
            "creation_time": "Thu Jul  4 16:35:30 2024",
            "modification_time": "Fri Jun  7 15:26:42 2024",
            "taglist": [],
            "grouplist": [],
            "img": "https://raw.githubusercontent.com/Txhey/blog/main/main/python\\pytorch/img/cover.jpg"
        },
        "Stary": {
            "key": "Stary",
            "relative_path": "Stary",
            "file_name": "Stary.md",
            "title": "Stary (v3.1.1)：个人网站项目",
            "abstract": "`github.io版` 功能介绍 blog 笔记管理（存储、索引、查看） view 查看笔记 (还可查看该笔记的其他附件 pdf等) 左边是文件目录，中间主要查看的文件(markdown)内容，右上角悬浮菜单目录，右边是副浏览页，右上角可关闭。 点击左边的文件，比如pdf后，将会在右边展示以作参考。 点击md文件内容的其他笔记内容链接时，也将展示到右边。 实现：每次查看链接是否是note仓库的文",
            "creation_time": "Thu Jul  4 16:15:56 2024",
            "modification_time": "Sat Jun  8 21:22:13 2024",
            "taglist": [],
            "grouplist": [],
            "img": "https://raw.githubusercontent.com/Txhey/blog/main/main/Stary/img/cover-Stary.svg"
        },
        "Transformer": {
            "key": "Transformer",
            "relative_path": "Transformer",
            "file_name": "Transformer.md",
            "title": "Transformer 模型分析",
            "abstract": "整体结构 Input 输入 Transformer模型的输入数据形状通常是三维张量 `batch_size`是批次大小，表示同时处理的样本数量。 `sequence_length`是序列长度，表示每个文本序列中词的数量或字符的数量。 `embedding_dim`是嵌入维度，表示词嵌入的维度或字符嵌入的维度。 Embedding 词嵌入层 将词用向量表示。 **代码** `vocab_size`:",
            "creation_time": "Thu Jul  4 16:14:55 2024",
            "modification_time": "Fri Jun 21 15:01:30 2024",
            "taglist": [],
            "grouplist": [],
            "img": "https://raw.githubusercontent.com/Txhey/blog/main/main/Transformer/img/cover-Transformer.png"
        },
        "Transformer pytorch实现": {
            "key": "Transformer pytorch实现",
            "relative_path": "Transformer\\Transformer pytorch实现",
            "file_name": "Transformer pytorch实现.md",
            "title": "Transformer pytorch实现",
            "abstract": "符号定义： N : Encoder和Decoder的层数，默认为6 src tgt src_mask tgt_mask",
            "creation_time": "Thu Jul  4 16:35:57 2024",
            "modification_time": "Tue Jun  4 20:26:16 2024",
            "taglist": [],
            "grouplist": [],
            "img": "https://raw.githubusercontent.com/Txhey/blog/main/main/Transformer\\Transformer pytorch实现/img/cover.png"
        },
        "code": {
            "key": "code",
            "relative_path": "Transformers",
            "file_name": "code.md",
            "title": "Transformers代码解析",
            "abstract": "加载数据集 其他操作 查看数据集格式 类型为`DatasetDict` 数据集分为：`train`（训练集）、`validation`（验证集）、`test`（测试集） 每个集合内的数据列名`feature`，和数据条数`num_rows` 查看训练集的第一条数据内容 查看数据集属性（feature） 数据处理 语音处理 修改采样率 绘图 波形图waveform 声谱图spectrogram",
            "creation_time": "Thu Jul  4 16:36:16 2024",
            "modification_time": "Fri Jun 21 22:14:15 2024",
            "taglist": [],
            "grouplist": [],
            "img": null
        },
        "Transformers": {
            "key": "Transformers",
            "relative_path": "Transformers",
            "file_name": "Transformers.md",
            "title": "抱抱 Transformers",
            "abstract": "Pipeline Tokenizer 处理batch Fast和 Slow Tokenizer Fast：基于Rust，更快，还会生成些其他数据 Slow：基于python，更慢 offset_mapping：每个词的开始index和末尾index Model",
            "creation_time": "Thu Jul  4 16:36:16 2024",
            "modification_time": "Fri Jun 21 13:25:45 2024",
            "taglist": [],
            "grouplist": [],
            "img": null
        },
        "unity": {
            "key": "unity",
            "relative_path": "unity",
            "file_name": "unity.md",
            "title": "Unity 教程",
            "abstract": "视图中心 选中物体，按`F`键将视野移动到物体中心。 透视与正交 透视（Persp） 正交（Iso）：物体大小与距离无关 $$ y(x)= \\sum_{i=0}^na_{i}x^i$$ c#脚本 物体",
            "creation_time": "Thu Jul  4 16:38:46 2024",
            "modification_time": "Mon Jun 24 19:45:30 2024",
            "taglist": [],
            "grouplist": [],
            "img": null
        },
        "vue": {
            "key": "vue",
            "relative_path": "vue",
            "file_name": "vue.md",
            "title": "## 问题总结",
            "abstract": "你这个系统用的什么（框架/库）做的？ 用的vue（是一种[渐进式](渐进式)框架，[组件式](# 组件式)开发）,页面设计使用了`element-plus`库。 用的什么工具开发？ 用的`VScode`（读音：v s code 全程： visual studio code） 使用的什么数据库？ 我们没有使用数据库，登录和注册功能是将账号密码当成**变量**存储在项目里。 具体：为了简单，我们将账号",
            "creation_time": "Thu Jul  4 16:16:26 2024",
            "modification_time": "Wed Jun 12 14:03:06 2024",
            "taglist": [],
            "grouplist": [],
            "img": "https://raw.githubusercontent.com/Txhey/blog/main/main/vue/img/cover.png"
        },
        "六级": {
            "key": "六级",
            "relative_path": "六级",
            "file_name": "六级.md",
            "title": "六级笔记总结",
            "abstract": "",
            "creation_time": "Thu Jul  4 16:39:36 2024",
            "modification_time": "Sun Jun 16 14:40:42 2024",
            "taglist": [],
            "grouplist": [],
            "img": null
        },
        "学习任务": {
            "key": "学习任务",
            "relative_path": "学习目标",
            "file_name": "学习任务.md",
            "title": "学习任务",
            "abstract": "每日任务： 9点前起床 每天一篇论文，不一定看完，1h起步 英语6级1h 电子琴1h 吉他1h 健身1h 11点前睡觉 使用BERT做情绪识别",
            "creation_time": "Thu Jul  4 16:40:15 2024",
            "modification_time": "Tue Jun 18 16:22:04 2024",
            "taglist": [],
            "grouplist": [],
            "img": "https://raw.githubusercontent.com/Txhey/blog/main/main/学习目标/img/cover-学习任务.jpg"
        },
        "学习目标": {
            "key": "学习目标",
            "relative_path": "学习目标",
            "file_name": "学习目标.md",
            "title": "学习内容和目标总结",
            "abstract": "学习目标 英语 论文专业英语 六级 AI 桌面助手 具有360°视觉，听觉和其他感知，可以行动、说话、显示等功能。 吉他 电子琴 种花 学习内容总结（未分类） Seaborn https://seaborn.pydata.org/examples/ python，Seaborn是一个强大的数据可视化工具，通过简洁的接口和丰富的功能，可以帮助用户更轻松地进行数据分析和展示。 学习目标总结 面向公共大",
            "creation_time": "Thu Jul  4 16:40:15 2024",
            "modification_time": "Tue Jun 18 13:31:27 2024",
            "taglist": [],
            "grouplist": [],
            "img": null
        },
        "”华为杯“数学建模": {
            "key": "”华为杯“数学建模",
            "relative_path": "数学建模",
            "file_name": "”华为杯“数学建模.md",
            "title": "“华为杯”研究生数学建模竞赛",
            "abstract": "竞赛设立一、二、三等奖、华为专项奖、数模之星、数模之星提名奖、成功参赛奖、参赛单位优秀组织奖等 总共`34.5%`的人可以得奖，其中： -一等奖：`1.5%`-二等奖：`13%`-三等奖：`20%` 题型分布 华为专项题（2题） 比较偏工科 2022： `A`题：移动场景超分辨定位问题 `B`题：方形件组批优化问题 最优化题目（2题） 比较偏统计 2022： `C`题：汽车制造涂装-总装缓存调序区",
            "creation_time": "Mon Jun 17 21:40:15 2024",
            "modification_time": "Tue Jun  4 17:01:59 2024",
            "taglist": [],
            "grouplist": [],
            "img": "https://raw.githubusercontent.com/Txhey/blog/main/main/数学建模/img/cover-”华为杯“数学建模.png"
        },
        "机械臂(小)助手": {
            "key": "机械臂(小)助手",
            "relative_path": "机械臂(小)助手",
            "file_name": "机械臂(小)助手.md",
            "title": "机械臂助手笔记",
            "abstract": "零件参数 步进电机 42步进电机 高度 短款： 23.5mm 普通： 38mm 长款： 48mm 出轴 直径 5mm 长度 22mm 宽度 42mm 孔位 位置宽度 31mm 直径大小 3mm 有效深度 5mm 凸起 直径 22mm 高度 2mm 接口处 宽度 16.2mm 高度 9.2mm 突出 5.5mm 普通款 短款 28步进电机 出轴长度：13mm 孔距离： 23mm 孔径： 3mm 行星",
            "creation_time": "Thu Jul  4 16:39:00 2024",
            "modification_time": "Fri Jun 28 15:31:06 2024",
            "taglist": [],
            "grouplist": [],
            "img": null
        },
        "驱动Emm_V5.0": {
            "key": "驱动Emm_V5.0",
            "relative_path": "机械臂(小)助手",
            "file_name": "驱动Emm_V5.0.md",
            "title": "Emm_V5.0闭环步进电机驱动",
            "abstract": "最大电流3000mA，最高转速 3000RPM+ 第一次上电自检 可能会出现的错误： **提示 1 秒“Not Cal”，然后进入校准菜单（此时只有 6 个菜单项，含 Exit 项）** 原因：未进行校准 没进行过编码器校准的闭环电机只有 6 个菜单项，分别是“Cal”、“MotType”、“P_Pul”、“P_Serial”、“Restore”、“Exit”； 按照电机类型修改`mottype ",
            "creation_time": "Thu Jul  4 16:39:00 2024",
            "modification_time": "Sun Jun 30 09:35:55 2024",
            "taglist": [],
            "grouplist": [],
            "img": null
        },
        "立创开发板·泰山派RK3566": {
            "key": "立创开发板·泰山派RK3566",
            "relative_path": "立创开发板·泰山派RK3566",
            "file_name": "立创开发板·泰山派RK3566.md",
            "title": "立创开发板·泰山派RK3566 教程",
            "abstract": "目录 第一章 简介 烧录Ubuntu固件 准备ubuntu的img镜像文件 （我下载后放在了[D:\\Code_Download\\Linux\\ubuntu\\ubuntu20.04_hdmi_20231130_update.img](D:\\Code_Download\\Linux\\ubuntu)） 使用烧录工具（`RKDevTool_Release_v2.92`）进行烧录 首先进入loader模式 按住",
            "creation_time": "Thu Jul  4 16:39:20 2024",
            "modification_time": "Mon Jun 17 19:22:41 2024",
            "taglist": [],
            "grouplist": [],
            "img": null
        },
        "Attention is All You Need": {
            "key": "Attention is All You Need",
            "relative_path": "论文笔记\\Attention_is_All_You_Need",
            "file_name": "Attention is All You Need.md",
            "title": "Attention is All You Need",
            "abstract": "Author 几乎都是google公司的人 >作者名字后面的符号意义：> > `†`和`‡`: 这两位不是google的，是在google实习期间完成的工作 > `*`: 代表共同贡献 第一页末尾描述了对于该论文的贡献有介绍：（每个作者做了什么内容） Abstract **原文** Thedominant sequence transduction models are based on comp",
            "creation_time": "Thu Jul  4 16:12:42 2024",
            "modification_time": "Thu Jun 13 21:30:38 2024",
            "taglist": [],
            "grouplist": [],
            "img": "https://raw.githubusercontent.com/Txhey/blog/main/main/论文笔记\\Attention_is_All_You_Need/img/cover-Attention is All You Need.jpg"
        },
        "论文：BERT": {
            "key": "论文：BERT",
            "relative_path": "论文笔记\\BERT",
            "file_name": "论文：BERT.md",
            "title": "论文： BERT： Pre-training of Deep Bidirectional Transformers for Language Understanding",
            "abstract": "参考 [BERT论文逐段精读[论文精读]](https://www.bilibili.com/video/BV1PL411M7eQ/?spm_id_from=333.337.search-card.all.click&vd_source=550e50f36bb6f32ba43eb2af3f8307be) **BERT**:**B**idirectional **E**ncoder **R**epr",
            "creation_time": "Thu Jul  4 16:12:42 2024",
            "modification_time": "Tue Jun 18 13:23:01 2024",
            "taglist": [
                "论文笔记",
                "BERT",
                "Attention",
                "Transformer"
            ],
            "grouplist": [
                "论文笔记"
            ],
            "img": null
        }
    },
    "tagSummary": {
        "excel": [
            "excel"
        ],
        "办公": [
            "excel"
        ],
        "git": [
            "git"
        ],
        "js": [
            "js"
        ],
        "web": [
            "js"
        ],
        "前端": [
            "js"
        ],
        "论文笔记": [
            "论文：BERT"
        ],
        "BERT": [
            "论文：BERT"
        ],
        "Attention": [
            "论文：BERT"
        ],
        "Transformer": [
            "论文：BERT"
        ]
    },
    "groupSummary": {
        "工具": [
            "excel"
        ],
        "tool": [
            "git"
        ],
        "前端": [
            "js"
        ],
        "论文笔记": [
            "论文：BERT"
        ]
    },
    "sortByCreateTime": [
        "”华为杯“数学建模",
        "Attention is All You Need",
        "论文：BERT",
        "Transformer",
        "Stary",
        "vue",
        "3D打印笔记",
        "excel",
        "idea-AI机械臂",
        "git",
        "js",
        "kaggle",
        "markdown",
        "numpy",
        "plt",
        "pytorch",
        "Transformer pytorch实现",
        "code",
        "Transformers",
        "unity",
        "机械臂(小)助手",
        "驱动Emm_V5.0",
        "立创开发板·泰山派RK3566",
        "六级",
        "学习任务",
        "学习目标",
        "test"
    ]
}